# This file is intended to be used as a starting point for local
# development. You should be able to copy it as-is into a file
# named `.env` as a sibling of this file, and be able to run the
# passport server and clientin a development mode where it neither
# reads nor writes to any external or 3rd party services, like the
# Zuzalu ticketing system or our email provider. You will be able
# to input any email into the login page email input, hit 'Generate
# Pass', and get logged into the passport as a test user. Then, you
# will also be able to use the consumer client to request proofs
# on behalf of this test user, with everything working properly
# and as expected.
##################################################################

# If true, this is Zupass, if false this is PCDPass. Must match
# the corresponding environment variable in the server.
IS_ZUZALU=false

# WARNING! Never set this environment variable in production!
# This variables tells the passport server to let anyone register
# even if they use a fake and invalid email. This is intended
# for development purposes only, so that you can run the entire
# application stack locally without depending on 3rd party services.
BYPASS_EMAIL_REGISTRATION=true

# The following environment variables connect the passport server
# to a postgres database that runs on the developer's machine. You
# can start a postgres instance locally by running the following
# commands from within the passport server application directory:
#
# yarn localdb:init
# yarn localdb:up
#
# To stop the postgres instance, you can run `yarn localdb:down`
#
# Alternatively, you could start a local postgres instance a different
# way. In any case, make sure these environment variables point to a
# working postgres database, and that the credentials you set here are
# correct, as that is necessary even for local development.
#
DATABASE_HOST=localhost
DATABASE_USERNAME=admin
DATABASE_PASSWORD=password
DATABASE_DB_NAME=postgres
DATABASE_SSL=false

# The port on which this server runs. We recommend `3002` for convenient
# local integration with the rest of the services that run within this
# repository.
PORT=3002

# The passport server needs to know where it itself can be accessed in order
# to be able to create URLs that point to itself.
PASSPORT_SERVER_URL="http://localhost:3002"

# To enable error reporting, both these environment variables must be set
#ROLLBAR_TOKEN=
#ROLLBAR_ENV_NAME=

# To enable server-issued PCDs, the server needs an RSA private key. You can generate one
# using the following command at the root of the project:
#
# node -e 'console.log(Buffer.from(new (require("node-rsa"))({b:2048}).exportKey("private")).toString("base64"))'
SERVER_RSA_PRIVATE_KEY_BASE64=

# To enable notifications from the server to be sent to Discord
DISCORD_TOKEN=
DISCORD_ALERTS_CHANNEL_ID=
DISCORD_CLIENT_ID=